on:
  push:
  pull_request:
    branches: [ main ]

env:
  # This is the java version that will trigger an upload to the SNAPSHOT maven store
  # Other Java versions within the matrix are just unit tested
  MAIN_JAVA_VERSION: 1.8
  # We will only publish the build artifacts to our pseudo snapshot repo for a push on
  # this branch
  PUBLISH_BRANCH: refs/heads/main

jobs:
  build:
    strategy:
      matrix:
        java-version: [1.8, 11]
        scala-version: [2.13.2]

    runs-on: ubuntu-latest
    continue-on-error: true

    steps:
    - uses: actions/checkout@v2
    - run: git fetch --prune --tags --unshallow

    - name: Set up JDK ${{ matrix.java-version }}
      uses: actions/setup-java@v1
      with:
        java-version: ${{ matrix.java-version }}

    - name: Setup GPG secrets
      run: |
        gpg --version
        cat <(echo "${{ secrets.OSSRH_GPG_SECRET_KEY }}") | base64 -d | gpg --batch --import
        gpg --list-secret-keys --keyid-format LONG

    - run: echo ::set-env name=GIT_TAG::$(git describe --tags --exact-match 2>/dev/null)    

    - run: |
        ./millw -i show blendedVersion ; echo "${{ github.ref }}"
        echo "GIT_TAG = [${{ env.GIT_TAG }}]"

    - run: ./millw -i -j 0 -k blended[${{ matrix.scala-version }}].__.testCached

    - name: Upload Testlogs
      uses: actions/upload-artifact@v2
      if: failure()
      with:
        name: test-logs
        path: out/testlog-*/

    - run: ./millw -i scoverage.xmlReportAll

    - name: Upload scoverage reports to codecov.io
      uses: codecov/codecov-action@v1
      with:
        file: out/scoverage/xmlReportAll/dest/scoverage.xml

    - name: Upload to simple maven store
      if: ${{ matrix.java-version == env.MAIN_JAVA_VERSION && github.ref == env.PUBLISH_BRANCH && github.event_name == 'push' && env.GIT_TAG == ''}}
      env:
        WOQ_SCP_USER: ${{ secrets.WOQ_SCP_USER }}
        WOQ_SCP_KEY: ${{ secrets.WOQ_SCP_KEY}}
        WOQ_HOST_KEY: ${{ secrets.WOQ_HOST_KEY }}

      run: ./millw -i -j 0 blended[${{ matrix.scala-version}}].__.publishScp

    - name: Release to Maven central
      if: ${{ matrix.java-version == env.MAIN_JAVA_VERSION && github.event_name == 'push' && env.GIT_TAG != ''}}
      run: ./millw mill.scalalib.PublishModule/publishAll --sonatypeCreds "${{ secrets.OSSRH_USER}}:${{ secrets.OSSRH_PASSWORD }}" --gpgArgs "--passphrase=${{ secrets.OSSRH_GPG_SECRET_KEY_PASSWORD}},--batch,--yes,-a,-b,--pinentry-mode,loopback" --publishArtifacts blended[${{ matrix.scala-version }}].__.publishArtifacts --readTimeout 600000 --release true --signed true
